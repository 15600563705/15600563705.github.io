<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>活着就是伟大</title>
      <link href="2020/12/25/huo-zhao-jiu-shi-wei-da/"/>
      <url>2020/12/25/huo-zhao-jiu-shi-wei-da/</url>
      
        <content type="html"><![CDATA[<h1 id="活着就是伟大"><a href="#活着就是伟大" class="headerlink" title="活着就是伟大"></a>活着就是伟大</h1><blockquote><p>2020年最大的收获是一身伤、一身债、半条命、还活着。承蒙岁月不弃，赐我一路荆棘，感恩时光厚爱，赏我颠沛流离。但别着急，我一定会把他从黑暗里拖出来，我一定会追上那个从前发着光的自己。</p></blockquote><hr><p><strong>抑郁症就像是一间封闭的，让人窒息的黑屋子。我每天都在反复憧憬，是不是就在我自杀的那一瞬间，就是我越狱的时刻。如果下一秒死去，就能得到解脱，对于这个平静的世界，也不会带来任何打扰。那如果是这样的话，我为什么要活着？</strong></p><hr><p>即使是在这么严重的认知障碍里，我唯一还保留的，就是对朋友们的信任。我在日记本里记下了他们对我说的话。</p><ul><li>“难受的时候记得来找我，万一我能帮你呢？”</li><li>“不知道能为你做些什么，不开心的时候就给我打电话吧~”</li><li>“没有人的生活是轻松的，可是有人无条件爱着你~”</li><li>“你不需要对我作出回应，你只需要知道，有我爱着你就好了~”</li></ul><p>真的很难想象，他们有为我付出这么多宝贵的精力和时间成本，所以这让我无比地内疚和感念。</p><hr><p>有一次，我的心理咨询师问我:“你能够原谅父母，原谅谎言，原谅那些施暴者和伤害你的人，可是你为什么不能原谅你自己呢？”<br>那一瞬间，我忽然明白:我们最需要照顾却一直忽略的，是我们自己。敏感，是我们的软肋，但它也可能是我们的出口。毕竟你自己才是自己最好的心理医生。</p><hr><p>“哎哎哎，你看你看那个谁谁谁多厉害啊，父母一点文化都没有，然后成绩还能这么好，成绩一直第一名啊什么什么，他真的很有本事，他肯定能考上清华北大……从小到大，我一直被贴上这样的标签，但是这些夸奖的背后，他们没有看到的是 我需要通过每天吃药，需要通过心理咨询来帮助自己过上一个稍微正常人一点的生活。就是，感觉就是特别混乱你懂嘛？一方面别人在夸奖你，好像这样的人生就是很了不起的人生，但是只有我这个当事人，只有我自己知道这样的人生有多痛苦，有多悲惨……每次想到这里，我都会忍不住流眼泪，我已经告诉过自己很多次很多次，这个事情已经过去很久很久了，但是它永远就是「那些被压抑的情绪其实从未消失，它藏在你的潜意识里一点一点积累，然后慢慢地吞噬你……」</p><p>校园霸凌，被老师虐待，被同学欺负，被同学“瞧不起”，被某些大人恶语相向……就是这些人，这些大人啊，这些成年人，总有他们的办法让一个小孩感到难堪，总有他们的办法让一个小孩感到恐惧，感到难受，但是那个时候的我总是在想，是不是我真的是不够善良呀，不够讨人喜欢，所以他们是那么地讨厌我……它们在我9岁~15岁期间就埋下了种子，一直到今天，从未消失。<br>        后来，我长大了，我也成为了一个成年人，我甚至成为了辅导老师，我发现当我成年了以后，我根本没有办法对一个人说出特别过分特别残忍的话，我在说任何一句话之前都会考虑到会不会伤害到他的内心，我发现我慢慢地成为了一个还算善良的成年人，我觉得这一点我还是非常欣慰的。虽然我抑郁了，可能未来会毕不了业，可能会找不到工作，一无是处。但我还是长成了一个比较善良的成年人。后来，我就发现:不是我不够好，而是我当时所处的世界所面对的人 太缺乏善意了。</p><hr><p>每一个抑郁症患者，曾经都是一个不被祝福的生命。被嫌弃，被排斥，被不喜欢，被冤枉，被排挤，这些经历都会藏在你的潜意识里，慢慢积累，在你遇到现实中的重大挫折和困难的时候，它就出现了，然后慢慢地吞噬你。</p><hr><p><strong>那些不被祝福的孩子，长大以后，需要用一生去治愈他的童年。</strong></p><hr><p>过往的怆痛就好像是一颗钉子钉在墙上，即使你把它拔除，也依然会留下一个洞。过去我一直在反复地盯着这个洞，观察它，回忆它钉入墙面时对我所造成的伤害。于是，我被抑郁渗透了全部的感知能力。</p><p>但是现在，当我把目光移开一点，我会发现，原来墙边有一片绿叶，原来桌边有一本书，当我再把目光拉远的时候，我看到了整片花园，我甚至开始去想，我要去尝试生命中更多的可能性，我要去享受阳光和美食。墙上的洞，还在这个地方，但是我已经不在乎了。</p><p>其实所有的努力，都只是为了完成平凡的生活，但是对于像我一样一直徘徊在生死边缘的抑郁症患者来说，能活下来，就是我这一天里我所完成的最伟大的事情。</p><p>随着精神医学名词在公共语言环境下的变质，比如社交恐惧，抑郁症。它们被泛化，被动辄、解构、娱乐、消费，逐渐地让大家失去对精神医学的尊重，进而加重了患者对罹患疾病后的病耻感，反向去影响我们得病之后的决策、认知和行为。一方面，我们应当尊重和保护语言的纯洁性，另一方面也反映出，其实时代的精神困境，已经到达了临界点。<br>按照WHO的数据统计，每8个人当中，就有一个人患有抑郁症。此刻也许他没有歇斯底里，但是他不想活着，更不敢去死。相之于像我之前一样 自杀 的极端行为，这种对生活更可怕的钝感，叫 麻木。</p><p>即便如此，每过30秒，依然会有一个人自杀。我们看了太多因为抑郁症而自杀的新闻了，可是下一个人会是谁呢？他会是你身边的谁嘛？</p><p><strong>抑郁症是人体的自我保护机制，它是我们坠入深渊的一个缓冲区，重构人格，和自己和解，或者永远在抑郁的屋子里内耗、打转、痛苦。</strong></p><p>要知道，<strong>社会进步是由死人的方式来实现的。</strong></p><p><em>我知道，我能做的最大程度的理解，就是放纵你去寻求你的解脱。可是当你纵身一跃时，我还是忍不住去拉你的手。</em></p>]]></content>
      
      
      <categories>
          
          <category> 情绪管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 睡眠障碍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/12/25/hello-world/"/>
      <url>2020/12/25/hello-world/</url>
      
        <content type="html"><![CDATA[<h2 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World~"></a><strong>Hello World~</strong></h2><blockquote><p>北平寒冬？亦或是大病初愈</p><p>死并非生的对立面，而是作为生的一部分永存。</p><p>希望你能记住我。记住我这样活过、这样在你身边呆过。</p></blockquote><hr><p>以前一直觉得，如果没有手机，我一定会活不下去。但这次长达20天的住院， 可以说是彻底否定了这一观念？嗯<del>没错</del>哈哈哈哈哈可以这样说！</p><p>没有手机，没有外界干扰，真正地停下来。没有太大的压力，用心去体验生活，主动交流，反思自己，慢慢改变心态……更令人羡慕的应该是，每天9小时的深度睡眠。哈哈哈 emmm真的是非常棒的人生体验！更像是在《挪威的森林》中玲子和直子住的疗养院阿美寮一样，虽然怪诞，但特别舒适且让人怀恋……</p><p>住院期间，《孤独患者》读了4遍，接着读了东野圭吾的《恶意》《沉睡的森林》，村上春树的《挪威的森林》，最后几天还托护士长买了《Python核心编程》(后来想了想: 我是不是脑子有病？要不要再来一本《深入理解计算机系统基础》？/苦笑.jpg)</p><hr><p>正是这次不一样的体验，也让我有了一些跟以前不同的观念<del>最让我印象深刻的就是《挪威的森林》里的一句话</del> </p><p>“死并非生的对立面，而是作为生的一部分永存。”</p><p>读到这里，我突然停下来发呆，与其说是发呆，不如说是一种震撼？好像真的就是如此~ 死是生的一部分，而且永存。</p><p>同样的，在爱恨情仇里，恨并非爱的对立面，而是作为爱的一部分永存。(爱与恨) “死并非生的对立面，而是作为生的一部分永存。”这句话按照九年义务教育的补脑，颇有辩证思维在里面，即把生与死统一辩证来看，让人读起来颇感哲理。</p><hr><p>当第一次把《挪威的森林》读完，你会发现这本书从头到尾都弥漫着“孤独”和“死亡”的气息，木月，初美，绿子父母，直子，等等。文章的明线主要是渡边、直子、绿子之间的情感纠葛，暗线则可以从很多方面去思考，比如对生与死的思考，对性与爱的思考，等等。</p><p>不难看出，渡边与直子的感情，存活在木月死亡的阴影中。这是死者对渡边和直子这两个“生者”残酷的考验，也终究造成了直子的死。所以小说里，渡边才会提到“唯死者永远十八”，“喂，喂，木月你醒过来”。在这里，死亡不是一个人的事。直子的死对渡边的打击巨大，直子连同木月把他拉向死亡的一面，而玲子和绿子将他拉往生存的另一面。小说中直子虽然死了，但是她的遗物交给了玲子，玲子也从疗养院走了出来。换句话说，直子以另一种方式活了下去。</p><hr><p>“死”具有非常强大的吸引力，令人无可遏制地被吸引，我看书的时候就在想，只属于过去的，不会再重来的，但某些“死”的部分，令我成为了我。</p><p><em>“希望你能记住我。记住我这样活过、这样在你身边呆过。”</em></p><p>​                                                                                            <em>——《挪威的森林》村上春树</em></p><hr>]]></content>
      
      
      <categories>
          
          <category> 情绪管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 抑郁障碍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 元组</title>
      <link href="2020/12/25/python-yuan-zu/"/>
      <url>2020/12/25/python-yuan-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-元组"><a href="#Python3-元组" class="headerlink" title="Python3 元组"></a>Python3 元组</h1><p>Python 的元组与列表类似，不同之处在于<em>元组的元素不能修改</em>。</p><p><strong>元组使用小括号 ( )，列表使用方括号 [ ]。</strong></p><h2 id="元组创建"><a href="#元组创建" class="headerlink" title="元组创建"></a>元组创建</h2><p>元组创建很简单，只需要在括号中添加元素，并使用逗号隔开即可。</p><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/tup-2020-10-27-10-26-2.png" alt="img"></p><h4 id="实例-Python-3-0"><a href="#实例-Python-3-0" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup3 <span class="token operator">=</span> <span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"d"</span>  <span class="token comment">#  不需要括号也可以</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup3<span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建空元组"><a href="#创建空元组" class="headerlink" title="创建空元组"></a>创建空元组</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>元组中只包含一个元素时，需要在元素后面添加逗号，否则括号会被当作运算符使用：</p><h4 id="实例-Python-3-0-1"><a href="#实例-Python-3-0-1" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup1<span class="token punctuation">)</span>   <span class="token comment"># 不加逗号，类型为整型</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'int'</span><span class="token operator">&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">type</span><span class="token punctuation">(</span>tup1<span class="token punctuation">)</span>   <span class="token comment"># 加上逗号，类型为元组</span><span class="token operator">&lt;</span><span class="token keyword">class</span> <span class="token string">'tuple'</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>元组与字符串类似，下标索引从 0 开始，可以进行截取，组合等。</p><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/py-tup-10-26.png" alt="img"></p><hr><h2 id="访问元组"><a href="#访问元组" class="headerlink" title="访问元组"></a>访问元组</h2><p>元组可以使用下标索引来访问元组中的值，如下实例:</p><h4 id="实例-Python-3-0-2"><a href="#实例-Python-3-0-2" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span> tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span> <span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"tup1[0]: "</span><span class="token punctuation">,</span> tup1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"tup2[1:5]: "</span><span class="token punctuation">,</span> tup2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  Googletup2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="修改元组"><a href="#修改元组" class="headerlink" title="修改元组"></a>修改元组</h2><p>元组中的元素值是不允许修改的，但我们可以对元组进行连接组合，如下实例:</p><h4 id="实例-Python-3-0-3"><a href="#实例-Python-3-0-3" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">34.56</span><span class="token punctuation">)</span> tup2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">,</span> <span class="token string">'xyz'</span><span class="token punctuation">)</span>  <span class="token comment"># 以下修改元组元素操作是非法的。 </span><span class="token comment"># tup1[0] = 100  </span><span class="token comment"># 创建一个新的元组 </span>tup3 <span class="token operator">=</span> tup1 <span class="token operator">+</span> tup2 <span class="token keyword">print</span> <span class="token punctuation">(</span>tup3<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">34.56</span><span class="token punctuation">,</span> <span class="token string">'abc'</span><span class="token punctuation">,</span> <span class="token string">'xyz'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h2 id="删除元组"><a href="#删除元组" class="headerlink" title="删除元组"></a>删除元组</h2><p>元组中的元素值是不允许删除的，但我们可以使用del语句来删除整个元组，如下实例:</p><h4 id="实例-Python-3-0-4"><a href="#实例-Python-3-0-4" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span>tup<span class="token punctuation">)</span> <span class="token keyword">del</span> tup <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"删除后的元组 tup : "</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例元组被删除后，输出变量会有异常信息，输出如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">删除后的元组 tup <span class="token punctuation">:</span> Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"test.py"</span><span class="token punctuation">,</span> line <span class="token number">8</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span>tup<span class="token punctuation">)</span>NameError<span class="token punctuation">:</span> name <span class="token string">'tup'</span> <span class="token keyword">is</span> <span class="token keyword">not</span> defined<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="元组运算符"><a href="#元组运算符" class="headerlink" title="元组运算符"></a>元组运算符</h2><p>与字符串一样，元组之间可以使用 + 号和 * 号进行运算。这就意味着他们可以组合和复制，运算后会生成一个新的元组。</p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">len((1, 2, 3))</td><td align="left">3</td><td align="left">计算元素个数</td></tr><tr><td align="left">(1, 2, 3) + (4, 5, 6)</td><td align="left">(1, 2, 3, 4, 5, 6)</td><td align="left">连接</td></tr><tr><td align="left">(‘Hi!’,) * 4</td><td align="left">(‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’)</td><td align="left">复制</td></tr><tr><td align="left">3 in (1, 2, 3)</td><td align="left">True</td><td align="left">元素是否存在</td></tr><tr><td align="left">for x in (1, 2, 3): print (x,)</td><td align="left">1 2 3</td><td align="left">迭代</td></tr></tbody></table><hr><h2 id="元组索引和截取"><a href="#元组索引和截取" class="headerlink" title="元组索引和截取"></a>元组索引和截取</h2><p>因为元组也是一个序列，所以我们可以访问元组中的指定位置的元素，也可以截取索引中的一段元素，如下所示：</p><p>元组：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">,</span> <span class="token string">'Wiki'</span><span class="token punctuation">,</span> <span class="token string">'Weibo'</span><span class="token punctuation">,</span><span class="token string">'Weixin'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/py-tup-7.png" alt="img"></p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">tup[1]</td><td align="left">‘Runoob’</td><td align="left">读取第二个元素</td></tr><tr><td align="left">tup[-2]</td><td align="left">‘Weibo’</td><td align="left">反向读取，读取倒数第二个元素</td></tr><tr><td align="left">tup[1:]</td><td align="left">(‘Runoob’, ‘Taobao’, ‘Wiki’, ‘Weibo’, ‘Weixin’)</td><td align="left">截取元素，从第二个开始后的所有元素。</td></tr><tr><td align="left">tup[1:4]</td><td align="left">(‘Runoob’, ‘Taobao’, ‘Wiki’)</td><td align="left">截取元素，从第二个开始到第四个元素（索引为 3）。</td></tr></tbody></table><p>运行实例如下：</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">,</span> <span class="token string">'Wiki'</span><span class="token punctuation">,</span> <span class="token string">'Weibo'</span><span class="token punctuation">,</span><span class="token string">'Weixin'</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token string">'Runoob'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token string">'Weibo'</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">,</span> <span class="token string">'Wiki'</span><span class="token punctuation">,</span> <span class="token string">'Weibo'</span><span class="token punctuation">,</span> <span class="token string">'Weixin'</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">,</span> <span class="token string">'Wiki'</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="元组内置函数"><a href="#元组内置函数" class="headerlink" title="元组内置函数"></a>元组内置函数</h2><p>Python元组包含了以下内置函数</p><table><thead><tr><th align="left">序号</th><th align="left">方法及描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">len(tuple) 计算元组元素个数。</td><td align="left">&gt;&gt;&gt; tuple1 = (‘Google’, ‘Runoob’, ‘Taobao’) <br>&gt;&gt;&gt; len(tuple1) <br>3 <br>&gt;&gt;&gt;</td></tr><tr><td align="left">2</td><td align="left">max(tuple) 返回元组中元素最大值。</td><td align="left">&gt;&gt;&gt; tuple2 = (‘5’, ‘4’, ‘8’) <br>&gt;&gt;&gt; max(tuple2) <br>‘8’ <br>&gt;&gt;&gt;</td></tr><tr><td align="left">3</td><td align="left">min(tuple) 返回元组中元素最小值。</td><td align="left">&gt;&gt;&gt; tuple2 = (‘5’, ‘4’, ‘8’) <br>&gt;&gt;&gt; min(tuple2) <br>‘4’ <br>&gt;&gt;&gt;</td></tr><tr><td align="left">4</td><td align="left">tuple(iterable) 将可迭代系列转换为元组。</td><td align="left">&gt;&gt;&gt; list1= [‘Google’, ‘Taobao’, ‘Runoob’, ‘Baidu’] <br>&gt;&gt;&gt; tuple1=tuple(list1) <br>&gt;&gt;&gt; tuple1 <br>(‘Google’, ‘Taobao’, ‘Runoob’, ‘Baidu’)</td></tr></tbody></table><h2 id="关于元组是不可变的"><a href="#关于元组是不可变的" class="headerlink" title="关于元组是不可变的"></a>关于元组是不可变的</h2><p>所谓元组的不可变指的是元组所指向的内存中的内容不可变。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">'r'</span><span class="token punctuation">,</span> <span class="token string">'u'</span><span class="token punctuation">,</span> <span class="token string">'n'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'o'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'g'</span>   <span class="token comment"># 不支持修改元素</span>Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span> File <span class="token string">"&lt;stdin&gt;"</span><span class="token punctuation">,</span> line <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">**</span><span class="token keyword">in</span><span class="token operator">**</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>TypeError<span class="token punctuation">:</span> <span class="token string">'tuple'</span> <span class="token builtin">object</span> does <span class="token operator">**</span><span class="token keyword">not</span><span class="token operator">**</span> support item assignment<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">id</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span>   <span class="token comment"># 查看内存地址</span><span class="token number">4440687904</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> tup <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">id</span><span class="token punctuation">(</span>tup<span class="token punctuation">)</span><span class="token number">4441088800</span>   <span class="token comment"># 内存地址不一样了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从以上实例可以看出，重新赋值的元组 tup，绑定到新的对象了，不是修改了原来的对象。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 列表(List)</title>
      <link href="2020/12/25/python-lie-biao/"/>
      <url>2020/12/25/python-lie-biao/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-列表"><a href="#Python3-列表" class="headerlink" title="Python3 列表"></a>Python3 列表</h1><p>序列是 Python 中最基本的数据结构。</p><p>序列中的每个值都有对应的位置值，称之为索引，第一个索引是 0，第二个索引是 1，依此类推。</p><p>Python 有 6 个序列的内置类型，但最常见的是列表和元组。</p><p>列表都可以进行的操作包括索引，切片，加，乘，检查成员。</p><p>此外，Python 已经内置确定序列的长度以及确定最大和最小的元素的方法。</p><p>列表是最常用的 Python 数据类型，它可以作为一个方括号内的逗号分隔值出现。</p><p>列表的数据项不需要具有相同的类型</p><p>创建一个列表，只要把逗号分隔的不同的数据项使用方括号括起来即可。如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span> list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token punctuation">]</span> list3 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"a"</span><span class="token punctuation">,</span> <span class="token string">"b"</span><span class="token punctuation">,</span> <span class="token string">"c"</span><span class="token punctuation">,</span> <span class="token string">"d"</span><span class="token punctuation">]</span> list4 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'yellow'</span><span class="token punctuation">,</span> <span class="token string">'white'</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="访问列表中的值"><a href="#访问列表中的值" class="headerlink" title="访问列表中的值"></a>访问列表中的值</h2><h3 id="顺序索引"><a href="#顺序索引" class="headerlink" title="顺序索引"></a>顺序索引</h3><p>与字符串的索引一样，列表索引从 <strong>0</strong> 开始，第二个索引是 <strong>1</strong>，依此类推。</p><p>通过索引列表可以进行截取、组合等操作。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/05/positive-indexes-1.png" alt="img"></p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'yellow'</span><span class="token punctuation">,</span> <span class="token string">'white'</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">redgreenblue<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="倒序索引"><a href="#倒序索引" class="headerlink" title="倒序索引"></a>倒序索引</h3><p>索引也可以从尾部开始，最后一个元素的索引为 <strong>-1</strong>，往前一位为 <strong>-2</strong>，以此类推。</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/05/negative-indexes.png" alt="img"></p><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'yellow'</span><span class="token punctuation">,</span> <span class="token string">'white'</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-none"><code class="language-none">blackwhiteyellow<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="切片索引"><a href="#切片索引" class="headerlink" title="切片索引"></a>切片索引</h3><p>使用下标索引来访问列表中的值，同样你也可以使用方括号 <strong>[]</strong> 的形式截取字符，如下所示：</p><p><img src="https://www.runoob.com/wp-content/uploads/2014/05/first-slice.png" alt="img"></p><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python">nums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-none"><code class="language-none">[10, 20, 30, 40]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="负数索引值截取"><a href="#负数索引值截取" class="headerlink" title="负数索引值截取"></a>负数索引值截取</h3><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">"Zhihu"</span><span class="token punctuation">,</span> <span class="token string">"Taobao"</span><span class="token punctuation">,</span> <span class="token string">"Wiki"</span><span class="token punctuation">]</span> <span class="token comment"># 读取第二位 </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"list[1]: "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 从第二位开始（包含）截取到倒数第二位（不包含） </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"list[1:-2]: "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  Runoob<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Zhihu'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="更新列表"><a href="#更新列表" class="headerlink" title="更新列表"></a>更新列表</h2><p>你可以对列表的数据项进行修改或更新，你也可以使用 append() 方法来添加列表项，如下所示：</p><h4 id="实例-Python-3-0"><a href="#实例-Python-3-0" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"第三个元素为 : "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2001</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"更新后的第三个元素为 : "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意：</strong>我们会在接下来的章节讨论append()方法的使用</p><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">第三个元素为 <span class="token punctuation">:</span>  <span class="token number">1997</span>更新后的第三个元素为 <span class="token punctuation">:</span>  <span class="token number">2001</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="删除列表元素"><a href="#删除列表元素" class="headerlink" title="删除列表元素"></a>删除列表元素</h2><p>可以使用 del 语句来删除列表的的元素，如下实例：</p><h4 id="实例-Python-3-0-1"><a href="#实例-Python-3-0-1" class="headerlink" title="实例(Python 3.0+)"></a>实例(Python 3.0+)</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"原始列表 : "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token keyword">del</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"删除第三个元素 : "</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">原始列表 <span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">1997</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span>删除第三个元素 <span class="token punctuation">:</span>  <span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>注意：</strong>我们会在接下来的章节讨论 remove() 方法的使用</p><hr><h2 id="列表脚本操作符"><a href="#列表脚本操作符" class="headerlink" title="列表脚本操作符"></a>列表脚本操作符</h2><p>列表对 + 和 * 的操作符与字符串相似。+ 号用于组合列表，* 号用于重复列表。</p><p>如下所示：</p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">len([1, 2, 3])</td><td align="left">3</td><td align="left">长度</td></tr><tr><td align="left">[1, 2, 3] + [4, 5, 6]</td><td align="left">[1, 2, 3, 4, 5, 6]</td><td align="left">组合</td></tr><tr><td align="left">[‘Hi!’] * 4</td><td align="left">[‘Hi!’, ‘Hi!’, ‘Hi!’, ‘Hi!’]</td><td align="left">重复</td></tr><tr><td align="left">3 in [1, 2, 3]</td><td align="left">True</td><td align="left">元素是否存在于列表中</td></tr><tr><td align="left">for x in [1, 2, 3]: print(x, end=” “)</td><td align="left">1 2 3</td><td align="left">迭代</td></tr></tbody></table><hr><h2 id="列表截取与拼接"><a href="#列表截取与拼接" class="headerlink" title="列表截取与拼接"></a>列表截取与拼接</h2><p>Python的列表截取与字符串操作类型，如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">L<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>操作：</p><table><thead><tr><th align="left">Python 表达式</th><th align="left">结果</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">L[2]</td><td align="left">‘Taobao’</td><td align="left">读取第三个元素</td></tr><tr><td align="left">L[-2]</td><td align="left">‘Runoob’</td><td align="left">从右侧开始读取倒数第二个元素: count from the right</td></tr><tr><td align="left">L[1:]</td><td align="left">[‘Runoob’, ‘Taobao’]</td><td align="left">输出从第二个元素开始后的所有元素</td></tr></tbody></table><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>L<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'Google'</span><span class="token punctuation">,</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> L<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token string">'Taobao'</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> L<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token string">'Runoob'</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> L<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Taobao'</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>列表还支持拼接操作：<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>squares <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares <span class="token operator">+=</span> <span class="token punctuation">[</span><span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> squares <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="嵌套列表"><a href="#嵌套列表" class="headerlink" title="嵌套列表"></a>嵌套列表</h2><p>使用嵌套列表即在列表里创建其它列表，例如：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span>a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> n <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token operator">=</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> n<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> x<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token string">'b'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="Python列表函数-amp-方法"><a href="#Python列表函数-amp-方法" class="headerlink" title="Python列表函数&amp;方法"></a>Python列表函数&amp;方法</h2><p>Python包含以下函数:</p><table><thead><tr><th align="left">序号</th><th align="left">函数</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-len.html">len(list)</a> <br>列表元素个数</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-max.html">max(list)</a> <br>返回列表元素最大值</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-min.html">min(list)</a> <br>返回列表元素最小值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-list.html">list(seq)</a> <br>将元组转换为列表</td></tr></tbody></table><p>Python包含以下方法:</p><table><thead><tr><th align="left">序号</th><th align="left">方法</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-append.html">list.append(obj)</a> <br>在列表末尾添加新的对象</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-count.html">list.count(obj)</a> <br>统计某个元素在列表中出现的次数</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-extend.html">list.extend(seq)</a> <br>在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-index.html">list.index(obj)</a> <br>从列表中找出某个值第一个匹配项的索引位置</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-insert.html">list.insert(index, obj)</a> <br>将对象插入列表</td></tr><tr><td align="left">6</td><td align="left">[list.pop(<a href="https://www.runoob.com/python3/python3-att-list-pop.html">index=-1])</a> <br>移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-remove.html">list.remove(obj)</a> <br>移除列表中某个值的第一个匹配项</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-reverse.html">list.reverse()</a> <br>反向列表中元素</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-sort.html">list.sort( key=None, reverse=False)</a> <br>对原列表进行排序</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-clear.html">list.clear()</a> <br>清空列表</td></tr><tr><td align="left">11</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-list-copy.html">list.copy()</a> <br>复制列表</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python 字典</title>
      <link href="2020/12/25/python-zi-dian/"/>
      <url>2020/12/25/python-zi-dian/</url>
      
        <content type="html"><![CDATA[<h1 id="Python3-字典"><a href="#Python3-字典" class="headerlink" title="Python3 字典"></a>Python3 字典</h1><p>字典是另一种可变容器模型，且可存储任意类型对象。</p><h2 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h2><p>字典的每个键值 <strong>key=&gt;value</strong> 对用冒号 <strong>:</strong> 分割，每个对之间用逗号(<strong>,</strong>)分割，整个字典包括在花括号 <strong>{}</strong> 中 ,格式如下所示：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">d <span class="token operator">=</span> <span class="token punctuation">{</span>key1 <span class="token punctuation">:</span> value1<span class="token punctuation">,</span> key2 <span class="token punctuation">:</span> value2<span class="token punctuation">,</span> key3 <span class="token punctuation">:</span> value3 <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/py-dict-3.png" alt="img"></p><p>键必须是唯一的，但值则不必。</p><p>值可以取任何数据类型，但键必须是不可变的，如字符串，数字。</p><p>一个简单的字典实例：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> <span class="token string">'runoob'</span><span class="token punctuation">,</span> <span class="token string">'likes'</span><span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token string">'url'</span><span class="token punctuation">:</span> <span class="token string">'www.runoob.com'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://www.runoob.com/wp-content/uploads/2016/04/py-dict-2.png" alt="img"></p><p>也可如此创建字典：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">dict1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">'abc'</span><span class="token punctuation">:</span> <span class="token number">456</span> <span class="token punctuation">}</span>dict2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">'abc'</span><span class="token punctuation">:</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">98.6</span><span class="token punctuation">:</span> <span class="token number">37</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="访问字典里的值"><a href="#访问字典里的值" class="headerlink" title="访问字典里的值"></a>访问字典里的值</h2><p>把相应的键放入到方括号中，如下实例:</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'Class'</span><span class="token punctuation">:</span> <span class="token string">'First'</span><span class="token punctuation">}</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Name']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Age']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  Runoob<span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果用字典里没有的键访问数据，会输出错误如下：</p><h4 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'Class'</span><span class="token punctuation">:</span> <span class="token string">'First'</span><span class="token punctuation">}</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Alice']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Alice'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"test.py"</span><span class="token punctuation">,</span> line <span class="token number">5</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Alice']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Alice'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>KeyError<span class="token punctuation">:</span> <span class="token string">'Alice'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="修改字典"><a href="#修改字典" class="headerlink" title="修改字典"></a>修改字典</h2><p>向字典添加新内容的方法是增加新的键/值对，修改或删除已有键/值对如下实例:</p><h4 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'Class'</span><span class="token punctuation">:</span> <span class="token string">'First'</span><span class="token punctuation">}</span>  <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">8</span>                 <span class="token comment"># 更新 </span>Age <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'School'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"菜鸟教程"</span>  <span class="token comment"># 添加信息   </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Age']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['School']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'School'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token number">8</span><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'School'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  菜鸟教程<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><hr><h2 id="删除字典元素"><a href="#删除字典元素" class="headerlink" title="删除字典元素"></a>删除字典元素</h2><p>能删单一的元素也能清空字典，清空只需一项操作。</p><p>显示删除一个字典用del命令，如下实例：</p><h4 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'Class'</span><span class="token punctuation">:</span> <span class="token string">'First'</span><span class="token punctuation">}</span>  <span class="token keyword">del</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span> <span class="token comment"># 删除键 'Name' </span><span class="token builtin">dict</span><span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token comment"># 清空字典 </span><span class="token keyword">del</span> <span class="token builtin">dict</span>         <span class="token comment"># 删除字典  </span><span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Age']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['School']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'School'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但这会引发一个异常，因为用执行 del 操作后字典不再存在：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"test.py"</span><span class="token punctuation">,</span> line <span class="token number">9</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>    <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Age']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span>TypeError<span class="token punctuation">:</span> <span class="token string">'type'</span> <span class="token builtin">object</span> <span class="token keyword">is</span> <span class="token keyword">not</span> subscriptable<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注：</strong>del() 方法后面也会讨论。</p><h2 id="字典键的特性"><a href="#字典键的特性" class="headerlink" title="字典键的特性"></a>字典键的特性</h2><p>字典值可以是任何的 python 对象，既可以是标准的对象，也可以是用户定义的，但键不行。</p><p>两个重要的点需要记住：</p><p>1）<strong>不允许同一个键出现两次</strong>。创建时如果同一个键被赋值两次，后一个值会被记住，如下实例：</p><h4 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token string">'Name'</span><span class="token punctuation">:</span> <span class="token string">'小菜鸟'</span><span class="token punctuation">}</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Name']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  小菜鸟<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2）<strong>键必须不可变</strong>，所以可以用数字，字符串或元组充当，而用列表就不行，如下实例：</p><h4 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span>  <span class="token keyword">print</span> <span class="token punctuation">(</span><span class="token string">"dict['Name']: "</span><span class="token punctuation">,</span> <span class="token builtin">dict</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以上实例输出结果：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">Traceback <span class="token punctuation">(</span>most recent call last<span class="token punctuation">)</span><span class="token punctuation">:</span>  File <span class="token string">"test.py"</span><span class="token punctuation">,</span> line <span class="token number">3</span><span class="token punctuation">,</span> <span class="token keyword">in</span> <span class="token operator">&lt;</span>module<span class="token operator">&gt;</span>    <span class="token builtin">dict</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">[</span><span class="token string">'Name'</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token string">'Runoob'</span><span class="token punctuation">,</span> <span class="token string">'Age'</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">}</span>TypeError<span class="token punctuation">:</span> unhashable <span class="token builtin">type</span><span class="token punctuation">:</span> <span class="token string">'list'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="字典内置函数-amp-方法"><a href="#字典内置函数-amp-方法" class="headerlink" title="字典内置函数&amp;方法"></a>字典内置函数&amp;方法</h2><p>Python字典包含了以下内置函数：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th><th align="left">实例</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">len(dict) 计算字典元素个数，即键的总数。</td><td align="left">&gt;&gt;&gt; dict = {‘Name’: ‘Runoob’, ‘Age’: 7, ‘Class’: ‘First’} <br>&gt;&gt;&gt; len(dict) <br>3</td></tr><tr><td align="left">2</td><td align="left">str(dict) 输出字典，以可打印的字符串表示。</td><td align="left">&gt;&gt;&gt; dict = {‘Name’: ‘Runoob’, ‘Age’: 7, ‘Class’: ‘First’} <br>&gt;&gt;&gt; str(dict) <br>“{‘Name’: ‘Runoob’, ‘Class’: ‘First’, ‘Age’: 7}”</td></tr><tr><td align="left">3</td><td align="left">type(variable) 返回输入的变量类型，如果变量是字典就返回字典类型。</td><td align="left">&gt;&gt;&gt; dict = {‘Name’: ‘Runoob’, ‘Age’: 7, ‘Class’: ‘First’} <br>&gt;&gt;&gt; type(dict) <br>&lt;class ‘dict’&gt;</td></tr></tbody></table><p>Python字典包含了以下内置方法：</p><table><thead><tr><th align="left">序号</th><th align="left">函数及描述</th></tr></thead><tbody><tr><td align="left">1</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-clear.html">radiansdict.clear()</a> <br>删除字典内所有元素</td></tr><tr><td align="left">2</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-copy.html">radiansdict.copy()</a> <br>返回一个字典的浅复制</td></tr><tr><td align="left">3</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-fromkeys.html">radiansdict.fromkeys()</a> <br>创建一个新字典，以序列seq中元素做字典的键，val为字典所有键对应的初始值</td></tr><tr><td align="left">4</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-get.html">radiansdict.get(key, default=None)</a> <br>返回指定键的值，如果键不在字典中返回 default 设置的默认值</td></tr><tr><td align="left">5</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-in.html">key in dict</a> <br>如果键在字典dict里返回true，否则返回false</td></tr><tr><td align="left">6</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-items.html">radiansdict.items()</a> <br>以列表返回可遍历的(键, 值) 元组数组</td></tr><tr><td align="left">7</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-keys.html">radiansdict.keys()</a> <br>返回一个迭代器，可以使用 list() 来转换为列表</td></tr><tr><td align="left">8</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-setdefault.html">radiansdict.setdefault(key, default=None)</a> <br>和get()类似, 但如果键不存在于字典中，将会添加键并将值设为default</td></tr><tr><td align="left">9</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-update.html">radiansdict.update(dict2)</a> <br>把字典dict2的键/值对更新到dict里</td></tr><tr><td align="left">10</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-values.html">radiansdict.values()</a> <br>返回一个迭代器，可以使用 list() 来转换为列表</td></tr><tr><td align="left">11</td><td align="left">[pop(key<a href="https://www.runoob.com/python3/python3-att-dictionary-pop.html">,default])</a> <br>删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</td></tr><tr><td align="left">12</td><td align="left"><a href="https://www.runoob.com/python3/python3-att-dictionary-popitem.html">popitem()</a> <br>随机返回并删除字典中的最后一对键和值。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
